# https://www.elastic.co/guide/en/logstash/current/plugins-inputs-beats.html
input {
  beats {
    port => 5044
  }
}

filter {
  if [input][type] == "filestream" {
    if [log][file][path] == "${TRAEFIK_LOG}" {
      kv {
        remove_char_value => "\""
      }
      date {
        match => ["time", "ISO8601"]
        timezone => "UTC"
        target => "time"
      }
      ruby {
        code =>'event.set("time", Time.at(event.get("time").to_f).strftime("%Y-%m-%d %H:%M"))'
      }
      mutate { gsub => [ "msg", "\\n", " " ] }
      mutate { uppercase => [ "level" ] }
      mutate {
        replace => { "message" => "%{time} [%{level}] %{msg}" }
#        replace => { "message" => "%{[app][id]} %{time} [%{level}] %{msg}" }
      }
      mutate { lowercase => [ "level" ] }
      mutate {
        add_field => {
          "[event][kind]" => "event"
          "[event][category]" => "log"
          "[event][dataset]" => "traefik.error"
        }
        remove_field => ["time", "msg"]
      }
    }
  } else if [service][type] == "traefik" {
    if [fileset][name] == "access" {
      json {
        source => "message"
      }
      date {
        match => ["time", "ISO8601"]
        timezone => "UTC"
        target => "time"
      }
      ruby {
        code =>'event.set("time", Time.at(event.get("time").to_f).strftime("%Y-%m-%d %H:%M"))'
      }
      if [RouterName] =~ /.+/ {
        mutate {
          replace => { "message" => "%{time} [%{DownstreamStatus}] - %{RouterName}: %{RequestMethod} %{RequestPath}" }
#          replace => { "message" => %{[app][id]} "%{time} [%{DownstreamStatus}] - %{RouterName}: %{RequestMethod} %{RequestPath}" }
        }
      } else {
        mutate {
          replace => { "message" => "%{time} [%{DownstreamStatus}] - %{RequestAddr}: %{RequestMethod} %{RequestPath}" }
#          replace => { "message" => "%{[app][id]} %{time} [%{DownstreamStatus}] - %{RequestAddr}: %{RequestMethod} %{RequestPath}" }
        }
      }
      mutate {
        remove_field => ["time", "msg"]
      }
    }
  }
  mutate {
    add_field => {
      "[ecs][version]" => "${STACK_VERSION}"
    }
  }
}

# https://www.elastic.co/guide/en/logstash/current/plugins-outputs-elasticsearch.html
# https://www.elastic.co/guide/en/logstash/current/use-ingest-pipelines.html
output {
  elasticsearch {
    hosts => ["https://es01.${APP_NET}:9200"]
    data_stream => true
    ssl => true
    ssl_certificate_verification => false
    cacert => ["${ELASTIC_SSL_CERTIFICATEAUTHORITY}"]
    user => "${LOGSTASH_USERNAME}"
    password => "${LOGSTASH_PASSWORD}"
  }
}
