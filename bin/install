#!/usr/bin/env bash

read_var() {
    VAR=$(grep -m 1 "$1" "$2" | xargs)
    IFS="=" read -ra VAR <<< "$VAR"
    echo "${VAR[1]}"
}

scriptPath="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
rootPath="$(dirname "${scriptPath}")"

if [[ ! -f "$rootPath/.env" ]]; then
    echo "ERROR: File .env not found";
    echo;
    exit 1;
fi

RUNENV=$1

if [[ -z "$RUNENV" ]]; then
    RUNENV="local"
fi

echo "================= MAKE VOLUME ================="
# for NAME in apm es01 es02 filebeat heartbeat kibana logstash metricbeat; do
for NAME in apm es01 filebeat heartbeat kibana logstash metricbeat; do
    if !(docker volume inspect "platel-${NAME}" >/dev/null 2>&1); then
        echo "create:"
        docker volume create --name platel-${NAME}
    fi
done;
echo
echo "================= MAKE docker-compose.$RUNENV.yml ================="

if [[ -f "$rootPath/docker-compose.$RUNENV.yml" ]]; then
  ${scriptPath}/stop
  echo "Nothing to do, docker-compose.$RUNENV.yml exist. Remove it first!"
  exit 1;
else
  ES_NET=$(read_var ES_NET .env)
  ELASTIC_NETWORK=$(read_var ELASTIC_NETWORK .env)
  APP_ID=$(read_var APP_ID .env)
  mkdir -p $rootPath/extras/hosts
  echo "::1               localhost ip6-localhost ip6-loopback" > $rootPath/extras/hosts/hosts
  echo "127.0.0.1         localhost" >> $rootPath/extras/hosts/hosts
  echo "${ES_NET}.2     es01       es01.${ELASTIC_NETWORK}" >> $rootPath/extras/hosts/hosts
  echo "${ES_NET}.5     logstash   logstash.${ELASTIC_NETWORK}" >> $rootPath/extras/hosts/hosts
  echo "${ES_NET}.6     kibana     kibana.${ELASTIC_NETWORK}" >> $rootPath/extras/hosts/hosts
  echo "${ES_NET}.7     heartbeat  heartbeat.${ELASTIC_NETWORK}" >> $rootPath/extras/hosts/hosts
  echo "${ES_NET}.8     metricbeat metricbeat.${ELASTIC_NETWORK}" >> $rootPath/extras/hosts/hosts
  echo "${ES_NET}.9     filebeat   filebeat.${ELASTIC_NETWORK}" >> $rootPath/extras/hosts/hosts
  echo "${ES_NET}.10    apm-server apm-server.${ELASTIC_NETWORK}" >> $rootPath/extras/hosts/hosts
  echo "${ES_NET}.254   traefik    traefik.${ELASTIC_NETWORK}" >> $rootPath/extras/hosts/hosts
  cat $rootPath/compose/docker-head.yml > $rootPath/docker-compose.$RUNENV.yml
  cat $rootPath/compose/docker-es01.yml >> $rootPath/docker-compose.$RUNENV.yml
# cat $rootPath/compose/docker-setup-mamka.yml >> $rootPath/docker-compose.$RUNENV.yml
  cat $rootPath/compose/docker-setup-eliasondrej.yml >> $rootPath/docker-compose.$RUNENV.yml
  cat $rootPath/compose/docker-end.yml >> $rootPath/docker-compose.$RUNENV.yml
  echo
  echo "================= START INSTALL ================"
  ${scriptPath}/start
  echo
  echo "Use 'curl -s -X GET -u elastic:[KIBANA_PASSWORD] http://es01:9200/?pretty | grep cluster_uuid' after setup set kibana password and exit or see 'docker logs -f ${APP_ID}-setup'"
  echo
  echo "Set CLUSTER-UUID to '.env' and start 'bin/setup'"
  echo
  echo "Start 'bin/setup'"
fi
