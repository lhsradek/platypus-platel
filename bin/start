#!/usr/bin/env bash

read_var() {
    VAR=$(grep -m 1 "$1" "$2" | xargs)
    IFS="=" read -ra VAR <<< "$VAR"
    echo "${VAR[1]}"
}

DOCKER_NETWORK=$(read_var DOCKER_NETWORK .env)

scriptPath="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
rootPath="$(dirname "${scriptPath}")"

if [[ ! -f "$rootPath/.env" ]]; then
    echo "ERROR: File .env not found";
    echo;
    exit 1;
fi

RUNENV=$1

if [[ -z "$RUNENV" ]]; then
    RUNENV="local"
fi

if [[ ! -f "$rootPath/docker-compose.$RUNENV.yml" ]]; then
    echo "ERROR: File docker-compose.$RUNENV.yml not found.";
    echo;
    exit 1;
fi

APP_ID=$(read_var APP_ID .env)

for NAME in logstash; do
  if !(docker volume inspect "${APP_ID}-${NAME}" >/dev/null 2>&1); then
    echo "Volume don't exists. First start 'bin/install' or create ${APP_ID}-${NAME}!"
    exit 1
  fi
done;

if !(docker network inspect "${DOCKER_NETWORK}" >/dev/null 2>&1); then
    echo "ERROR: Docker network ${DOCKER_NETWORK} is not running. Start it first."
    exit 1;
fi

ARGS="-f $rootPath/docker-compose.$RUNENV.yml"
# ARGS="-f $rootPath/docker-compose.$RUNENV.yml --verbose"
# ARGS="-f $rootPath/docker-compose.$RUNENV.yml --verbose --log-level=DEBUG"

if [[ -f "$rootPath/docker-compose.extras.yml" ]]; then
    ARGS="$ARGS -f $rootPath/docker-compose.extras.yml"
fi

# mkdir -p $rootPath/logs $rootPath/logs/apm $rootPath/logs/es01 $rootPath/logs/es02 $rootPath/logs/filebeat $rootPath/logs/kibana $rootPath/logs/metricbeat
mkdir -p $rootPath/logs $rootPath/logs/apm $rootPath/logs/es01 $rootPath/logs/filebeat $rootPath/logs/kibana $rootPath/logs/metricbeat
find $rootPath/logs -type d -exec chmod 777 \{\} \;;
find $rootPath/logs -type f -exec chmod 666 \{\} \;;

if [[ ${RUNENV} == "logstash" ]]; then
    docker start platel-logstash
else
    docker-compose ${ARGS} up -d
fi

