#
# === APM Server ===
#
  apm-server:
    depends_on:
      kibana:
        condition: service_healthy
    # Ubuntu - enterprisesearch
    image: docker.elastic.co/apm/apm-server:${STACK_VERSION}
    deploy:
      resources:
        limits:
          memory: ${MEM_LIMIT}
    restart: ${DOCKER_RESTART_POLICY}
    container_name: "${APP_ID}-apm-server"
    hostname: "apm-server.${ELASTIC_NETWORK}"
    networks:
      # local network:
      elastic:
        ipv4_address: ${ES_NET}.10
    # ports:
    #   - ${APM_PORT}:8200
    #   - ${MONITOR_PORT}:5066
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./extras/hosts/hosts:/etc/hosts
      - ./certs:/usr/share/apm-server/certs
      - ./extras/apm-server/apm-server.yml:/usr/share/apm-server/apm-server.yml:ro
      - ./logs/apm:/usr/share/apm-server/logs
      - apm:/usr/share/apm-server
    environment:
      - APP_NET=${ELASTIC_NETWORK}
      - CLUSTER_UUID=${CLUSTER_UUID}
      - ELASTICSEARCH_USERNAME=${ELASTIC_USERNAME}
      - ELASTICSEARCH_PASSWORD=${ELASTIC_PASSWORD}
      - ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES=/usr/share/apm-server/certs/ca/ca.crt
      - ELASTIC_APM_API_KEY=${ELASTIC_APM_API_KEY}
      - ELASTIC_APM_ENVIRONMENT=${STAGE}
      - ELASTIC_APM_SERVER_URL=${ELASTIC_APM_SERVER_URL}
      - ELASTIC_APM_SERVICE_NAME=${APP_HOST}-${APP_ID}
      - ES_NET=${ES_NET}
      - ES_PORT=${ES_PORT}
      - KIBANA_PORT=${KIBANA_PORT}
      - STAGE=${STAGE}
      - VERIFICATION_MODE=${VERIFICATION_MODE}        
