#
# === L - Logstash ===
#
  logstash:
    depends_on:
      es01:
        condition: service_healthy
    # Ubuntu - logstash 
    image: logstash:${STACK_VERSION}
    deploy:
      resources:
        limits:
          memory: ${MEM_LOGSTASH_LIMIT}
    restart: ${DOCKER_RESTART_POLICY}
    container_name: "${APP_ID}-logstash"
    hostname: "logstash.${ELASTIC_NETWORK}"
    networks:
      elastic:
        ipv4_address: ${ES_NET}.5
    # ports:
      # syslog access pipeline
      # - 5000:5000/udp
      # - 5000:5000/tcp
      # syslog error pipeline
      # - 5001:5001/udp
      # - 5001:5001/tcp
      # beat pipeline
      # - ${LOGSTASH_PORT}:5044
      # metrics
      # - 9600:9600
    volumes:
      # - /var/run/docker.sock:/var/run/docker.sock
      - ./extras/hosts/hosts:/etc/hosts
      - ./certs/ca/ca.crt:/usr/share/logstash/config/certs/ca.crt
      - ./certs/logstash/logstash.crt:/usr/share/logstash/config/certs/logstash.crt
      - ./certs/logstash/logstash.pkcs8.key:/usr/share/logstash/config/certs/logstash.key
      - ./extras/logstash/pipelines.yml:/usr/share/logstash/config/pipelines.yml
      - ./extras/logstash/logstash.yml:/usr/share/logstash/config/logstash.yml
      - ./extras/logstash/beat.conf:/usr/share/logstash/pipeline/beat.conf
      - ./extras/logstash/syslog-access.conf:/usr/share/logstash/pipeline/syslog-access.conf
      - ./extras/logstash/syslog-error.conf:/usr/share/logstash/pipeline/syslog-error.conf
      - logstash:/usr/share/logstash
    environment:
      - APP_NET=${ELASTIC_NETWORK}
      - CLUSTER_UUID=${CLUSTER_UUID}
      - ELASTIC_SSL_CERTIFICATEAUTHORITY=/usr/share/logstash/config/certs/ca.crt
      - ES_NET=${ES_NET}
      - LS_JAVA_OPTS=${LS_JAVA_OPTS}
      - VERIFICATION_MODE=${VERIFICATION_MODE}
      - STACK_VERSION=${STACK_VERSION}
      - LOGSTASH_USERNAME=logstash_writer
      - LOGSTASH_PASSWORD=${ELASTIC_PASSWORD}
      - ELASTIC_USERNAME=${ELASTIC_USERNAME}
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "curl -s -I http://${ES_NET}.5:9600 | grep -q 'HTTP/1.1 200 OK'"]
      interval: 10s
      timeout: 10s
      retries: 500
        
